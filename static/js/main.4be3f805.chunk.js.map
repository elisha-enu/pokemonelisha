{"version":3,"sources":["pages/app/units/styled.js","components/button/styled.js","components/button/index.js","pages/styled.js","pages/app/units/index.js","store/function.js","store/actions.js","pages/app/index.js","pages/detail/units/styled.js","components/input/styled.js","components/input/index.js","pages/detail/units/index.js","pages/detail/index.js","pages/list/units/styled.js","pages/list/units/index.js","pages/list/index.js","components/navbar/styled.js","components/navbar/index.js","pages/index.js","serviceWorker.js","store/reducer.js","index.js"],"names":["PokemonListStyled","styled","div","_templateObject","ButtonWrapper","_templateObject2","ButtonStyled","button","styled_templateObject","Button","_ref","label","onClick","name","react_default","a","createElement","defaultProps","UlStyled","ul","pages_styled_templateObject","LiStyled","li","styled_templateObject2","AppStyled","_templateObject3","AppHeaderStyled","_templateObject4","AppBodyStyled","_templateObject5","App","listOfPokemon","totalPokemon","getListOfPokemon","handleNextButton","handlePrevButton","handleDetailProfile","offset","limit","listMyPokemon","useEffect","ownedPokemon","forEach","list","map","idx","key","url","react_router_dom","to","concat","components_button","setPage","payload","type","dispatch","URL","axios","get","then","response","data","catch","error","console","log","setSuccessCatchedPokemon","connect","state","results","count","myPokemonList","getState","offsets","limits","HeaderStyled","units_styled_templateObject","BodyStyled","units_styled_templateObject2","SegmenCatchStyled","styled_templateObject3","styled_templateObject4","styled_templateObject5","GridStyled","_templateObject6","ContentBodyStyled","_templateObject7","InputStyled","input","input_styled_templateObject","Input","placeholder","onChange","value","Detail","pokemonName","pokemonMoves","pokemonTypes","pokemonSprites","failedCatch","succeedCatch","handleCatchPokemon","handleRenameNickname","_useState","useState","_useState2","Object","slicedToArray","nickname","setNickname","Fragment","e","target","keys","sp","src","alt","mv","move","typ","pokemonId","detailProfile","id","moves","types","sprites","randNumber","Math","floor","random","newNickname","mypokemonId","mypokemonName","urlPoke","listPokemon","urlPokemon","nicknamePokemon","newListPokemon","list_units_styled_templateObject","ListPokemon","handleRemovePokemon","length","units_styled_PokemonListStyled","removedPokemon","splice","NavbarStyle","nav","navbar_styled_templateObject","LeftNavbar","navbar_styled_templateObject2","RightNavbar","navbar_styled_templateObject3","Navbar","children","this","props","React","Component","Left","Right","_ref2","PagesRouter","navbar_Navbar","react_router","exact","path","component","Boolean","window","location","hostname","match","initialState","next","prev","isLoading","isError","reducer","arguments","undefined","action","objectSpread","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","es","pages","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4be3f805.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nexport const PokemonListStyled = styled.div`\n  border: 1px solid #ef5350;\n  width: 100%;\n  margin: 2px;\n  padding: 4px;  \n\n  a {\n    width: 100%;\n    text-decoration: none;\n    color: black;\n\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    \n  }\n  :hover {\n    background: #e94141;\n    a {\n      color: white;\n    }\n  }\n`\n\nexport const ButtonWrapper = styled.div`\n  width: 100%;\n  display: inline-flex;\n  justify-content: center;\n  \n  > button:first-child {\n    margin-right: 8px;\n  }\n`","import styled from 'styled-components'\n\nexport const ButtonStyled = styled.button`\n  background: #ef5350;\n  min-height: 32px;\n  min-width: 72px;\n  color: black;\n  border-radius: 20px;\n  outline: none;\n  border: 1px solid white;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 4px;\n  \n  :hover {\n    background:#e94141;\n    cursor: pointer;\n  }\n`","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { ButtonStyled } from './styled'\n\nconst Button = ({ \n  label,\n  onClick,\n  name,\n}) => (\n  <ButtonStyled onClick={onClick} name={name}>\n    {label}\n  </ButtonStyled>\n)\n\nButton.propTypes = {\n  label: PropTypes.string,\n  onClick: PropTypes.func,\n  name: PropTypes.string,\n}\n\nButton.defaultProps = {\n  label: 'Click me',\n  onClick: null,\n  name: 'buttonName',\n}\n\nexport default Button","\nimport styled from 'styled-components'\n\nexport const UlStyled = styled.ul`\n    margin-block-start: 0;\n    margin-block-end: 0;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    cursor: pointer;\n    margin-left: 0;\n`\n\nexport const LiStyled = styled.li`\n    display: inline-flex;\n    padding: 0 8px;\n    height: 100%;\n    align-items: center;\n    \n    :hover{\n      background: #e94141;\n    }\n\n    a{\n      width: 100%;\n      height: 100%;\n      color: white;\n      display: flex;\n      align-items: center;\n      text-decoration: none;\n      :hover {\n        text-decoration: underline;\n      }\n    }\n`\n\nexport const AppStyled = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  margin: auto;\n  padding: 36px;\n`\n\nexport const AppHeaderStyled = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  font-size: 20px;\n\n  border-bottom: 1px solid #1b1c21;\n  padding-bottom: 8px;\n  margin-bottom: 8px;\n`\n\nexport const AppBodyStyled = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  font-size: 14px;\n  color: black;\n`","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport './styled.js';\nimport Button from '../../../components/button';\nimport { PokemonListStyled, ButtonWrapper } from './styled.js';\nimport { AppStyled, AppHeaderStyled, AppBodyStyled } from '../../styled';\nimport { Link } from \"react-router-dom\";\n\nconst App = ({\n  listOfPokemon,\n  totalPokemon,\n  getListOfPokemon,\n  handleNextButton,\n  handlePrevButton,\n  handleDetailProfile,\n  offset,\n  limit,\n  listMyPokemon,\n}) => {\n  useEffect(() => {\n    getListOfPokemon(offset, limit) \n  }, [offset])\n\n  const ownedPokemon = [];\n  listMyPokemon && listMyPokemon.forEach((list) => {\n    if (list.name in ownedPokemon)\n        ownedPokemon[list.name] += 1;\n      else\n        ownedPokemon[list.name] = 1;\n    });\n\n  return (\n    <AppStyled>\n      <AppHeaderStyled>\n        List of Pokemon\n      </AppHeaderStyled>\n      <AppBodyStyled>\n        {\n          listOfPokemon && listOfPokemon.map((list, idx) => (\n            <PokemonListStyled key={idx} onClick={() => handleDetailProfile(list.url)}>\n              <Link to='/pokemonelisha/detail'>\n                <div>\n                  {list.name}\n                </div>\n                <div>\n                  {ownedPokemon[list.name] && `owned : ${ownedPokemon[list.name]}`}\n                </div>\n              </Link>\n            </PokemonListStyled>\n          ))\n        }\n        Total Pokemon: {totalPokemon}\n        <ButtonWrapper>\n          <Button label=\"Prev\" name=\"prevButton\" onClick={() => { offset - limit >=0 && handlePrevButton()} }/>\n          <Button label=\"Next\" name=\"nextButton\" onClick={() => { offset + limit < totalPokemon && handleNextButton()}}/>\n        </ButtonWrapper>\n      </AppBodyStyled>\n    </AppStyled>\n  )\n}\n\nApp.propTypes = {\n  getListOfPokemon: PropTypes.func.isRequired,\n  totalPokemon: PropTypes.number.isRequired,\n  handleNextButton: PropTypes.func.isRequired,\n  handlePrevButton: PropTypes.func.isRequired,\n  handleDetailProfile: PropTypes.func.isRequired,\n}\n\nApp.defaultProps = {\n  getListOfPokemon: () => {},\n  totalPokemon: 0,\n  handleNextButton: () => {},\n  handlePrevButton: () => {},\n  handleDetailProfile: () => {},\n}\n\nexport default App\n","import {\n  GET_LIST_PAGE_SUCCESS,\n\n  SET_LOADING,\n  SET_ERROR,\n\n  SET_PAGE,\n\n  GET_DETAIL_PROFILE_SUCCESS,\n\n  SET_CATCHED_POKEMON_SUCCESS,\n  SET_CATCHED_POKEMON_FAILED,\n  SET_CATCHED_POKEMON_RENAME,\n} from './actions'\nimport axios from 'axios'\n\nexport const onLoading = () => ({\n  type: SET_LOADING,\n})\n\nexport const onError = () => ({\n  type: SET_ERROR,\n})\n\nexport const getListPokemonSuccess = products => ({\n  type: GET_LIST_PAGE_SUCCESS,\n  payload: products,\n})\n\nexport const getListOfPokemon = (offset, limit) => (dispatch) => {\n  let URL = `https://pokeapi.co/api/v2/pokemon/?offset=${offset}&limit=${limit}`\n\n  dispatch(onLoading());\n  \n  return axios.get(URL).then((response) => {\n    dispatch(getListPokemonSuccess(response.data))\n  }).catch((error) => {\n    dispatch(onError())\n  });\n}\n\nexport const setPage = (payload) => ({\n  type: SET_PAGE,\n  payload\n})\n\nexport const handleNextButton = () => (dispatch, getState) => {\n  const offsets = getState().offset\n  const limits = getState().limit\n  const newOffsets = offsets + limits\n\n  dispatch(setPage(newOffsets))\n}\n\nexport const handlePrevButton = () => (dispatch, getState) => {\n  const offsets = getState().offset\n  const limits = getState().limit\n  const newOffsets = offsets - limits\n\n  dispatch(setPage(newOffsets))\n}\n\nexport const getDetailProfileSuccess = products => {\n  return ({\n    type: GET_DETAIL_PROFILE_SUCCESS,\n    payload: products,\n  })\n}\n\nexport const handleDetailProfile = (payload) => (dispatch) => {\n  let URL = payload\n\n  dispatch(onLoading());\n\n  return axios.get(URL).then((response) => {\n    dispatch(getDetailProfileSuccess(response.data))\n  }).catch((error) => {\n    console.log(error)\n    dispatch(onError())\n  })\n}\n\nexport const setSuccessCatchedPokemon = data => {\n  return ({\n    type: SET_CATCHED_POKEMON_SUCCESS,\n    payload: data,\n  })\n}\n\nexport const onFailedCatchedPokemon = () => {\n  return ({\n    type: SET_CATCHED_POKEMON_FAILED,\n  })\n}\n\nexport const onRenameCatchedPokemon = () => {\n  return ({\n    type: SET_CATCHED_POKEMON_RENAME,\n  })\n}\n\nexport const handleCatchPokemon = () => (dispatch) => {\n  const randNumber = Math.floor(Math.random() * Math.floor(100));\n\n  if(randNumber >=0 && randNumber <= 49) {\n    dispatch(onFailedCatchedPokemon())\n  } else {\n    dispatch(onRenameCatchedPokemon())\n  }\n}\n\nexport const handleRenameNickname = (newNickname) => (dispatch, getState) => {\n  const mypokemonId = getState().detailProfile.id\n  const mypokemonName = getState().detailProfile.name\n  const urlPoke = `https://pokeapi.co/api/v2/pokemon/${mypokemonId}`\n\n  const listPokemon = getState().myPokemonList\n  const data = {urlPokemon: urlPoke, nicknamePokemon: newNickname, name: mypokemonName}\n\n  const newListPokemon = listPokemon.concat(data)\n\n  dispatch(setSuccessCatchedPokemon(newListPokemon))\n}\n\n\nexport const handleRemovePokemon = (id) => (dispatch, getState) => {\n  const removedPokemon = getState().myPokemonList\n  removedPokemon.splice(id,1)\n\n  dispatch(setSuccessCatchedPokemon(removedPokemon))\n}","export const SET_LOADING = 'SET_LOADING'\nexport const SET_ERROR = 'SET_ERROR'\n\nexport const GET_LIST_PAGE_SUCCESS = 'GET_LIST_PAGE_SUCCESS'\n\nexport const SET_PAGE = 'SET_PAGE'\n\nexport const GET_DETAIL_PROFILE_SUCCESS = 'GET_DETAIL_PROFILE_SUCCESS'\n\nexport const SET_CATCHED_POKEMON_SUCCESS = 'SET_CATCHED_POKEMON_SUCCESS'\nexport const SET_CATCHED_POKEMON_FAILED = 'SET_CATCHED_POKEMON_FAILED'\nexport const SET_CATCHED_POKEMON_RENAME = 'SET_CATCHED_POKEMON_RENAME'\n","import { connect } from 'react-redux';\nimport App from './units';\nimport { \n  getListOfPokemon,\n  handleNextButton,\n  handlePrevButton,\n  handleDetailProfile\n} from '../../store/function'; \n\nexport const mapStateToProps = state => {\n  return {\n    listOfPokemon: state.list.results,\n    totalPokemon: state.list.count,\n    offset: state.offset,\n    limit: state.limit,\n    listMyPokemon: state.myPokemonList,\n  }\n}\n  \nexport const mapDispatchToProps = dispatch => ({\n  getListOfPokemon: (offset, limit) => dispatch(getListOfPokemon(offset, limit)),\n  handleNextButton: () => dispatch(handleNextButton()),\n  handlePrevButton: () => dispatch(handlePrevButton()),\n  handleDetailProfile: (url) => dispatch(handleDetailProfile(url)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","\nimport styled from 'styled-components'\nimport { AppHeaderStyled  } from '../../styled'\n\nexport const HeaderStyled = styled(AppHeaderStyled)`\n  display: inline-flex;\n  justify-content: flex-start;\n\n  > button {\n    margin-left: 16px;\n  }\n  border-bottom: 1px solid #1b1c21;\n  padding-bottom: 8px;\n  margin-bottom: 8px;\n`\n\nexport const BodyStyled = styled.div`\n  width: 100%;\n`\n\nexport const ButtonStyled = styled.button`\n  background: pink;\n  height: 32px;\n  min-width: 72px;\n  color: black;\n  border-radius: 20px;\n  outline: none;\n  border: 1px solid red;\n  \n  :hover {\n    background: red;\n    cursor: pointer;\n  }\n`\n\nexport const PokemonListStyled = styled.div`\n  border: 1px solid white;\n  width: 80%;\n  margin: 2px;\n`\n\nexport const SegmenCatchStyled = styled.div`\n  display: inline-flex;\n  justify-content: flex-start;\n  width: 100%;\n\n  >button {\n    margin-left: 16px;\n  }\n`\n\nexport const GridStyled = styled.div`\n  width: 100%;\n  display: grid;\n  grid-column-gap: 8px;\n\n  @media screen and (min-width: 960px) { \n    grid-template-columns: auto auto auto auto;\n  }\n  @media screen and (max-width: 960px) and (min-width: 480px) { \n      grid-template-columns: auto auto auto;\n  }\n  @media screen and (max-width: 480px) { \n      grid-template-columns: auto auto;\n  }\n`\n\nexport const ContentBodyStyled = styled.div`\n  padding-top: 24px;\n`","import styled from 'styled-components'\n\nexport const InputStyled = styled.input`\n    background: white;\n    border: 1px solid #D7D7D7;\n    color: black;\n    padding: 4px;\n    outline: none;\n    width: 100%;\n    box-sizing: border-box;\n`","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { InputStyled } from './styled'\n\nconst Input = ({ \n  placeholder,\n  onChange,\n  value,\n  type,\n}) => {\n  return (\n    <InputStyled \n      placeholder={placeholder}\n      onChange={onChange}\n      value={value}\n      type={type}\n    />\n  )\n}\n\nInput.propTypes = {\n  placeholder: PropTypes.string,\n  onChange: PropTypes.func,\n  value: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n  ]).isRequired,\n  type: PropTypes.oneOf(['text', 'password','number']),\n}\n\nInput.defaultProps = {\n    placeholder: 'Type something here',\n    onChange: () => {},\n    value: '',\n    type: 'text',\n}\n\n\nexport default Input","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './styled.js';\nimport Button from '../../../components/button';\nimport Input from '../../../components/input';\nimport { AppStyled, AppHeaderStyled, AppBodyStyled } from '../../styled.js';\nimport { HeaderStyled, BodyStyled, SegmenCatchStyled, GridStyled, ContentBodyStyled } from './styled.js';\n\nconst Detail = ({\n  pokemonName,\n  pokemonMoves,\n  pokemonTypes,\n  pokemonSprites,\n  failedCatch,\n  succeedCatch,\n  handleCatchPokemon,\n  handleRenameNickname,\n}) => {\n  const [nickname, setNickname] = useState('')\n\n  const onCatchPokemon = () => {\n    if(failedCatch && !succeedCatch) { // gagal catch pokemon \n      return (\n        <SegmenCatchStyled>\n          Failed catch the pokemon\n        </SegmenCatchStyled>\n      )\n    } else if (!failedCatch && succeedCatch) {\n      return (\n        <SegmenCatchStyled>\n          <Input \n            placeholder=\"insert nickname\"\n            onChange={(e) => setNickname(e.target.value)}\n            value={nickname}\n            type=\"text\"\n          />\n          <Button label=\"Insert!\" onClick={() => {\n            handleRenameNickname(nickname)\n            setNickname('')\n          }} /><br/>\n        </SegmenCatchStyled>\n      )\n    } else {\n      return (\n        <SegmenCatchStyled>\n          Catch your pokemon!\n        </SegmenCatchStyled>\n      )\n    }\n  }\n  return (\n    <AppStyled>\n      <AppHeaderStyled>\n        Detail Pokemon {pokemonName}\n      </AppHeaderStyled>\n      {\n        pokemonName ? (\n          <>\n            <HeaderStyled>\n              <Button label=\"Catch me!\" onClick={() => handleCatchPokemon()} />\n            </HeaderStyled>\n            <BodyStyled>\n              {onCatchPokemon()}\n\n              <ContentBodyStyled>\n                <HeaderStyled>\n                  Pokemon Image:\n                </HeaderStyled>\n                <GridStyled>\n                {\n                  Object.keys(pokemonSprites).map((sp, idx) => (\n                    pokemonSprites[sp] && (\n                      <div key={`type-${idx}`}>\n                        <div>\n                          {sp}\n                        </div>\n                        <div>\n                          <img src={pokemonSprites[sp]} alt={sp}/>\n                        </div>\n                      </div>\n                    )\n                  ))\n                } \n                </GridStyled>\n              </ContentBodyStyled>\n\n              <ContentBodyStyled>\n                <HeaderStyled>\n                  Moves:\n                </HeaderStyled>\n                <GridStyled>\n                {\n                  pokemonMoves.map((mv, idx) => (\n                    <div key={`move-${idx}`}>\n                      {mv.move.name}\n                    </div>\n                  ))\n                }\n                </GridStyled>\n              </ContentBodyStyled>\n\n              <ContentBodyStyled>\n                <HeaderStyled>\n                  Types:\n                </HeaderStyled>\n                <GridStyled>\n                {\n                  pokemonTypes.map((typ, idx) => {\n                    return (\n                      <div key={`type-${idx}`}>\n                        {typ.type.name}\n                      </div>\n                    )\n                  })\n                }\n                </GridStyled>\n              </ContentBodyStyled>\n\n            </BodyStyled>\n          </>\n        ) : (\n          <AppBodyStyled>\n            No data\n          </AppBodyStyled>\n        )\n      }\n      \n    </AppStyled>\n  )\n}\n\nDetail.propTypes = {\n  handleCatchPokemon: PropTypes.func.isRequired,\n  handleRenameNickname: PropTypes.func.isRequired,\n  \n}\n\nDetail.defaultProps = {\n  handleCatchPokemon: () => {},\n  handleRenameNickname: () => {},\n}\n\nexport default Detail\n","import { connect } from 'react-redux';\nimport Detail from './units';\nimport {\n  handleCatchPokemon,\n  handleRenameNickname,\n} from '../../store/function'; \n\nexport const mapStateToProps = state => {\n  return {\n    pokemonId: state.detailProfile.id,\n    pokemonName:  state.detailProfile.name,\n    pokemonMoves: state.detailProfile.moves,\n    pokemonTypes: state.detailProfile.types,\n    pokemonSprites: state.detailProfile.sprites,\n    failedCatch: state.failedCatch,\n    succeedCatch: state.succeedCatch,\n  }\n}\n  \nexport const mapDispatchToProps = dispatch => ({\n  handleCatchPokemon: () => dispatch(handleCatchPokemon()),\n  handleRenameNickname: (nickname) => dispatch(handleRenameNickname(nickname)), \n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Detail);","\nimport styled from 'styled-components'\n\nexport const PokemonListStyled = styled.div`\n  border: 1px solid #ef5350;\n  width: 100%;\n  margin: 2px;\n  padding: 4px;  \n  display: inline-flex;\n  justify-content: space-between;\n  align-items: center;\n\n  a {\n    text-decoration: none;\n    color: black;\n\n    height: 100%;\n    display: flex;\n    align-items: center;\n\n    :nth-child(1) {\n      width: 80%;\n    }\n  }\n  :hover {\n    background: #e94141;\n    a {\n      color: white;\n    }\n  }\n`","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './styled.js';\nimport { Link } from \"react-router-dom\";\nimport Button from '../../../components/button';\nimport { AppStyled, AppHeaderStyled, AppBodyStyled } from '../../styled.js';\nimport { PokemonListStyled } from './styled';\n\nconst ListPokemon = ({\n  listMyPokemon,\n  handleDetailProfile,\n  handleRemovePokemon,\n}) => {\n  return (\n    <AppStyled>\n      <AppHeaderStyled>\n        List My Pokemon\n      </AppHeaderStyled>\n      <AppBodyStyled>\n        {\n          listMyPokemon && listMyPokemon.length > 0 ? listMyPokemon.map((list, idx) => (\n            <PokemonListStyled key={idx} onClick={() => handleDetailProfile(list.urlPokemon)}>\n              <Link to='/pokemonelisha/detail'>\n                {list.name} - nickname: {list.nicknamePokemon}\n              </Link>\n              <Link to='/pokemonelisha/list'>\n                <Button label=\"Release pokemon\" onClick={() => handleRemovePokemon(idx)} /><br/>\n              </Link>\n            </PokemonListStyled>\n          )) : \n          (\n            <>\n              You have no pokemon\n            </>\n          )\n        }\n      </AppBodyStyled>\n    </AppStyled>\n  )\n}\n\nListPokemon.propTypes = {\n  handleDetailProfile: PropTypes.func,\n  handleRemovePokemon: PropTypes.func,\n  \n}\n\nListPokemon.defaultProps = {\n  handleDetailProfile: () => {},\n  handleRemovePokemon: () => {},\n}\n\nexport default ListPokemon\n","import { connect } from 'react-redux';\nimport ListPokemon from './units';\nimport {\n  handleDetailProfile,\n  handleRemovePokemon,\n} from '../../store/function'; \n\nexport const mapStateToProps = state => {\n    return {\n      listMyPokemon: state.myPokemonList,\n    }\n  }\n  \nexport const mapDispatchToProps = dispatch => ({\n  handleDetailProfile: (url) => dispatch(handleDetailProfile(url)),\n  handleRemovePokemon: (idx) => dispatch(handleRemovePokemon(idx)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListPokemon);","import styled from 'styled-components'\n\nexport const NavbarStyle = styled.nav`\n  position: relative;\n  min-height: 3rem;\n  width: 100%;\n  margin: 0 auto;\n  display: flex;\n  justify-content: space-between;\n  color: white;\n  background: #ef5350;\n`\n\nexport const LeftNavbar = styled.div`\n  padding-left: 48px;\n  display: inline-flex;\n  align-items: center;\n\n  div {\n    display: inline-flex;\n    align-items: center;\n\n    :not(:last-child) {\n      padding-right: 16px;\n    } \n  }\n\n`\n\nexport const RightNavbar = styled.div`\n  padding-right: 48px;\n  display: inline-flex;\n  align-items: center;\n  -webkit-mask-image: linear-gradient(90deg,transparent,#000 20px,#000 90%,transparent);\n\n  div {\n    display: inline-flex;\n    align-items: center;\n\n    :not(:first-child) {\n      padding-left: 16px;\n    }\n  }\n`","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {\n  LeftNavbar,\n  RightNavbar,\n  NavbarStyle,\n} from './styled'\n\nexport default class Navbar extends React.Component {\n  static propTypes = {\n    children: PropTypes.node,\n  }\n\n  static defaultProps = {\n    children: [],\n  }\n\n  static Left = ({\n    children,\n    onClick,\n  }) => (\n    <LeftNavbar onClick={onClick}>\n      {children}\n    </LeftNavbar>\n  )\n\n  static Right = ({\n    children,\n    onClick,\n  }) => (\n    <RightNavbar onClick={onClick}>\n      {children}\n    </RightNavbar>\n  )\n\n  render() {\n    const { children } = this.props\n\n    return (\n      <NavbarStyle>\n        {children}\n      </NavbarStyle>\n    )\n  }\n}","import React from \"react\";\nimport { Route, Link, BrowserRouter as Router } from \"react-router-dom\";\nimport App from './app'\nimport Detail from './detail'\nimport ListPokemon from './list'\nimport Navbar from '../components/navbar'\nimport { UlStyled, LiStyled } from \"./styled\"\n\nfunction PagesRouter() {\n  return (\n    <Router>\n      <Navbar>\n        <Navbar.Left>\n        </Navbar.Left>\n        <Navbar.Right>\n          <UlStyled>\n            <LiStyled>\n              <Link to=\"/pokemonelisha\">List</Link>\n            </LiStyled>\n            <LiStyled>\n              <Link to=\"/pokemonelisha/detail\">Detail</Link>\n            </LiStyled>\n            <LiStyled>\n              <Link to=\"/pokemonelisha/list\">My Pokemon</Link>\n            </LiStyled>\n          </UlStyled>\n        </Navbar.Right>\n      </Navbar>\n      <>\n        <Route exact path=\"/pokemonelisha\" component={App} />\n        <Route path=\"/pokemonelisha/detail\" component={Detail} />\n        <Route path=\"/pokemonelisha/list\" component={ListPokemon} />\n      </>\n    </Router>\n  );\n}\n\nexport default PagesRouter","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  SET_LOADING,\n  SET_ERROR,\n\n  GET_LIST_PAGE_SUCCESS,\n\n  SET_PAGE,\n\n  GET_DETAIL_PROFILE_SUCCESS,\n\n  SET_CATCHED_POKEMON_SUCCESS,\n  SET_CATCHED_POKEMON_FAILED,\n  SET_CATCHED_POKEMON_RENAME,\n} from './actions'\n\nconst initialState = {\n  list: {\n    results: [],\n    count: 0,\n    next: '',\n    prev: '',\n  },\n  isLoading: false,\n  isError: false,\n  offset: 0,\n  limit: 20,\n  detailProfile: {\n    id: '',\n    name: '',\n    moves: [],\n    types: [],\n    sprites: {},\n  },\n  myPokemonList: [],\n  failedCatch: false,\n  succeedCatch: false,\n};\n\nconst reducer = (state= initialState, action) => {\n  switch(action.type) {\n    case SET_LOADING:\n      return {\n        ...state,\n        isLoading: true,\n        isError: false,\n      }\n    case GET_LIST_PAGE_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        isError: false,\n        list: action.payload,\n      }\n    case SET_ERROR:\n      return {\n        ...state,\n        isLoading: false,\n        isError: true,\n      }\n    case SET_PAGE:\n      return {\n        ...state,\n        offset: action.payload,\n      }\n    case GET_DETAIL_PROFILE_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        isError: false,\n        detailProfile: action.payload,\n      }\n    case SET_CATCHED_POKEMON_SUCCESS:\n      return {\n        ...state,\n        myPokemonList: action.payload,\n        failedCatch: false,\n        succeedCatch: false,\n      }\n    case SET_CATCHED_POKEMON_FAILED:\n      return {\n        ...state,\n        failedCatch: true,\n        succeedCatch: false,\n      }\n    case SET_CATCHED_POKEMON_RENAME:\n      return {\n        ...state,\n        failedCatch: false,\n        succeedCatch: true,\n      }\n    default:\n      return {\n        ...state\n      };\n  }\n}\n\nexport default reducer\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider }  from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport './index.css';\nimport PagesRouter from './pages';\nimport * as serviceWorker from './serviceWorker';\nimport reducer from './store/reducer';\n\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));\n\nconst WrapperApp = () => ( \n  <Provider store={store} >\n    <PagesRouter />\n  </Provider>\n)\n\nReactDOM.render(<WrapperApp />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}